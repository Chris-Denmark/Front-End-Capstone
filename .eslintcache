[{"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\index.js":"1","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\reportWebVitals.js":"2","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\App.js":"3","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\PopInABox.js":"4","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\ApplicationViews.js":"5","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\Home.js":"6","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionForm.js":"7","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionList.js":"8","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionProvider.js":"9","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionDetail.js":"10","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionCard.js":"11","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\nav\\NavBar.js":"12","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\auth\\Login.js":"13","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\auth\\Register.js":"14"},{"size":339,"mtime":1612380567425,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":528,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":773,"mtime":1612388545899,"results":"19","hashOfConfig":"16"},{"size":1038,"mtime":1612411272985,"results":"20","hashOfConfig":"16"},{"size":0,"mtime":1612367341878,"results":"21","hashOfConfig":"16"},{"size":2437,"mtime":1612412723393,"results":"22","hashOfConfig":"16"},{"size":724,"mtime":1612405865163,"results":"23","hashOfConfig":"16"},{"size":2112,"mtime":1612367341882,"results":"24","hashOfConfig":"16"},{"size":1224,"mtime":1612413234107,"results":"25","hashOfConfig":"16"},{"size":378,"mtime":1612382172588,"results":"26","hashOfConfig":"16"},{"size":353,"mtime":1612383824021,"results":"27","hashOfConfig":"16"},{"size":2161,"mtime":1612386939087,"results":"28","hashOfConfig":"16"},{"size":3124,"mtime":1612387265819,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"mcf2by",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\index.js",[],["63","64"],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\reportWebVitals.js",[],["65","66"],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\App.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\PopInABox.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\ApplicationViews.js",["67"],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\Home.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionForm.js",["68"],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionList.js",["69","70","71","72"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { CollectionContext } from \"./CollectionProvider\"\r\nimport { Collection } from \"./CollectionCard\"\r\nimport \"./Collection.css\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const CollectionList = () => {\r\n  const { collections, getCollections, searchTerms } = useContext(CollectionContext)\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getCollections()\r\n  },[])\r\n  \r\n  return (\r\n    <>\r\n      <h1>Collections</h1>\r\n      <div className=\"collections\">\r\n      {\r\n        collections.map(collection => {\r\n          return <Collection key={collection.id} collection={collection} />\r\n        })\r\n      }\r\n      </div>\r\n    </>\r\n  )\r\n}","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionProvider.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionDetail.js",["73"],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionCard.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\auth\\Login.js",["74"],"import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\n\nexport const Login = props => {\n    const email = useRef()\n    const password = useRef()\n    const existDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => user.length ? user[0] : false)\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists) {\n                    localStorage.setItem(\"popinabox_user\", exists.id)\n                    history.push(\"/\")\n                } else {\n                    existDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <main className=\"container--login\">\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n\n            <section>\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h1>POP In A Box</h1>\n                    <h2>Please sign in</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input ref={email} type=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\">\n                            Sign in\n                        </button>\n                    </fieldset>\n                </form>\n            </section>\n            <section className=\"link--register\">\n                <Link to=\"/register\">Not a member yet?</Link>\n            </section>\n        </main>\n    )\n}\n\n","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\auth\\Register.js",["75"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const verifyPassword = useRef()\n    const conflictDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    fetch(\"http://localhost:8088/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`\n                        })\n                    })\n                        .then(res => res.json())\n                        .then(createdUser => {\n                            if (createdUser.hasOwnProperty(\"id\")) {\n                                localStorage.setItem(\"popinabox_user\", createdUser.id)\n                                history.push(\"/\")\n                            }\n                        })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n        \n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for POP In A Box</h1>\n                <fieldset>\n                    <label htmlFor=\"firstName\"> First Name </label>\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"lastName\"> Last Name </label>\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"inputEmail\"> Email address </label>\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                </fieldset>\n                <fieldset>\n                    <button type=\"submit\"> Sign in </button>\n                </fieldset>\n            </form>\n        </main>\n    )\n}\n\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":51,"column":10,"nodeType":"88","endLine":51,"endColumn":12,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"90","line":1,"column":40,"nodeType":"84","messageId":"85","endLine":1,"endColumn":48},{"ruleId":"82","severity":1,"message":"91","line":8,"column":40,"nodeType":"84","messageId":"85","endLine":8,"endColumn":51},{"ruleId":"82","severity":1,"message":"92","line":10,"column":9,"nodeType":"84","messageId":"85","endLine":10,"endColumn":16},{"ruleId":"86","severity":1,"message":"93","line":14,"column":5,"nodeType":"88","endLine":14,"endColumn":7,"suggestions":"94"},{"ruleId":"86","severity":1,"message":"95","line":27,"column":8,"nodeType":"88","endLine":27,"endColumn":10,"suggestions":"96"},{"ruleId":"82","severity":1,"message":"97","line":9,"column":11,"nodeType":"84","messageId":"85","endLine":9,"endColumn":19},{"ruleId":"82","severity":1,"message":"98","line":9,"column":11,"nodeType":"84","messageId":"85","endLine":9,"endColumn":25},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'collectionId', 'getCollectionById', and 'getCollections'. Either include them or remove the dependency array.","ArrayExpression",["101"],"'useState' is defined but never used.","'searchTerms' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCollections'. Either include it or remove the dependency array.",["102"],"React Hook useEffect has missing dependencies: 'collectionId' and 'getCollectionById'. Either include them or remove the dependency array.",["103"],"'password' is assigned a value but never used.","'verifyPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [collectionId, getCollectionById, getCollections]",{"range":"110","text":"111"},"Update the dependencies array to be: [getCollections]",{"range":"112","text":"113"},"Update the dependencies array to be: [collectionId, getCollectionById]",{"range":"114","text":"115"},[1588,1590],"[collectionId, getCollectionById, getCollections]",[453,455],"[getCollections]",[786,788],"[collectionId, getCollectionById]"]