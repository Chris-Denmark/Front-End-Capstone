[{"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\index.js":"1","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\reportWebVitals.js":"2","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\App.js":"3","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\PopInABox.js":"4","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\ApplicationViews.js":"5","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\Home.js":"6","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionForm.js":"7","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionList.js":"8","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionProvider.js":"9","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionDetail.js":"10","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionCard.js":"11","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\nav\\NavBar.js":"12","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\auth\\Login.js":"13","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\auth\\Register.js":"14"},{"size":339,"mtime":1612380567425,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":528,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":773,"mtime":1612388545899,"results":"19","hashOfConfig":"16"},{"size":1038,"mtime":1612411272985,"results":"20","hashOfConfig":"16"},{"size":0,"mtime":1612367341878,"results":"21","hashOfConfig":"16"},{"size":2437,"mtime":1612412723393,"results":"22","hashOfConfig":"16"},{"size":895,"mtime":1612538140466,"results":"23","hashOfConfig":"16"},{"size":2112,"mtime":1612367341882,"results":"24","hashOfConfig":"16"},{"size":1224,"mtime":1612413234107,"results":"25","hashOfConfig":"16"},{"size":378,"mtime":1612382172588,"results":"26","hashOfConfig":"16"},{"size":353,"mtime":1612383824021,"results":"27","hashOfConfig":"16"},{"size":2161,"mtime":1612386939087,"results":"28","hashOfConfig":"16"},{"size":3124,"mtime":1612387265819,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"mcf2by",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\index.js",[],["65","66"],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\reportWebVitals.js",[],["67","68"],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\App.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\PopInABox.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\ApplicationViews.js",["69"],"import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport { Home } from \"./Home\"\r\nimport { CollectionProvider } from \"./collections/CollectionProvider\"\r\nimport { CollectionList } from \"./collections/CollectionList\"\r\nimport { CollectionForm } from \"./collections/CollectionForm\"\r\nimport { CollectionDetail } from \"./collections/CollectionDetail\"\r\n\r\nexport const ApplicationViews = () => {\r\n  return (\r\n    <>  \r\n    <CollectionProvider>\r\n        <Route exact path=\"/\">\r\n          \r\n            <CollectionList />\r\n        </Route>\r\n\r\n          <Route exact path=\"/collections\">\r\n            <CollectionList />\r\n          </Route>\r\n\r\n          <Route path=\"/collections/create\">\r\n            <CollectionForm />\r\n          </Route>\r\n\r\n          <Route path=\"/collections/edit/:collectionId(\\d+)\">\r\n            <CollectionForm />\r\n          </Route>\r\n\r\n          <Route exact path=\"/collections/detail/:collectionId(\\d+)\">\r\n            <CollectionDetail />\r\n          </Route>\r\n        </CollectionProvider>\r\n    </>\r\n  )\r\n}","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\Home.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionForm.js",["70"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { CollectionContext } from \"../collections/CollectionProvider\"\r\nimport \"./Collection.css\"\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nexport const CollectionForm = () => {\r\n    const { addCollection, getCollections, getCollectionById, updateCollection } = useContext(CollectionContext)\r\n\r\n    const [collection, setCollection] = useState({\r\n      name: \"\"\r\n    })\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const { collectionId } = useParams();\r\n\t  const history = useHistory();\r\n\r\n    const handleControlledInputChange = (event) => {\r\n      const newCollection = { ...collection }\r\n      newCollection[event.target.id] = event.target.value\r\n      setCollection(newCollection)\r\n    }\r\n\r\n    const handleSaveCollection = () => {\r\n        if (collectionId){\r\n          updateCollection({\r\n              id: collection.id,\r\n              name: collection.name\r\n          })\r\n          .then(() => history.push(`/collections/detail/${collection.id}`))\r\n        }else {\r\n          addCollection({\r\n              name: collection.name,\r\n          })\r\n          .then(() => history.push(\"/collections\"))\r\n        }\r\n      }\r\n\r\n      useEffect(() => {\r\n        getCollections().then(() => {\r\n          if (collectionId) {\r\n            getCollectionById(collectionId)\r\n            .then(collection => {\r\n                setCollection(collection)\r\n                setIsLoading(false)\r\n            })\r\n          } else {\r\n            setIsLoading(false)\r\n          }\r\n        })\r\n      }, [])\r\n\r\n    return (\r\n      <form className=\"collectionForm\">\r\n        <h2 className=\"collectionForm__title\">{collectionId ? \"Edit Collection\" : \"Add Collection\"}</h2>\r\n        <fieldset>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"collectionName\">Collection name: </label>\r\n            <input type=\"text\" id=\"name\" required autoFocus className=\"form-control\"\r\n            placeholder=\"Collection name\"\r\n            onChange={handleControlledInputChange}\r\n            value={collection.name}/>\r\n          </div>\r\n        </fieldset>\r\n        <button className=\"btn btn-primary\"\r\n          disabled={isLoading}\r\n          onClick={event => {\r\n            event.preventDefault() \r\n            handleSaveCollection()\r\n          }}>\r\n        {collectionId ? \"Save Collection\" : \"Add Collection\"}</button>\r\n      </form>\r\n    )\r\n}","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionList.js",["71","72","73","74"],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionProvider.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionDetail.js",["75"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { CollectionContext } from \"./CollectionProvider\"\r\nimport \"./Collection.css\"\r\nimport { useParams, useHistory, Link } from \"react-router-dom\"\r\n\r\nexport const CollectionDetail = () => {\r\n  const { getCollectionById, deleteCollection } = useContext(CollectionContext)\r\n\r\n\tconst [collection, setCollection] = useState({})\r\n\r\n\tconst {collectionId} = useParams();\r\n\tconst history = useHistory();\r\n\r\n  const handleDelete = () => {\r\n    deleteCollection(collection.id)\r\n      .then(() => {\r\n        history.push(\"/collections\")\r\n      })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    console.log(\"useEffect\", collectionId)\r\n    getCollectionById(collectionId)\r\n    .then((response) => {\r\n      setCollection(response)\r\n    })\r\n    }, [])\r\n\r\n  return (\r\n    <section className=\"collection\">\r\n      <h3 className=\"collection__name\">{collection.name}</h3>\r\n      <button onClick={handleDelete}>Delete Collection</button>\r\n      <button onClick={() => {\r\n          history.push(`/collections/edit/${collection.id}`)\r\n      }}>Edit</button>\r\n      <button>\r\n        <Link to={`/popSearch`}>\r\n          Add to Collection\r\n        </Link>\r\n      </button>\r\n    </section>\r\n  )\r\n}","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\collections\\CollectionCard.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\auth\\Login.js",["76"],"import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\n\nexport const Login = props => {\n    const email = useRef()\n    const password = useRef()\n    const existDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => user.length ? user[0] : false)\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists) {\n                    localStorage.setItem(\"popinabox_user\", exists.id)\n                    history.push(\"/\")\n                } else {\n                    existDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <main className=\"container--login\">\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n\n            <section>\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h1>POP In A Box</h1>\n                    <h2>Please sign in</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input ref={email} type=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\">\n                            Sign in\n                        </button>\n                    </fieldset>\n                </form>\n            </section>\n            <section className=\"link--register\">\n                <Link to=\"/register\">Not a member yet?</Link>\n            </section>\n        </main>\n    )\n}\n\n","C:\\Users\\Cdenm\\workspace\\popinabox\\src\\components\\auth\\Register.js",["77"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const verifyPassword = useRef()\n    const conflictDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    fetch(\"http://localhost:8088/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`\n                        })\n                    })\n                        .then(res => res.json())\n                        .then(createdUser => {\n                            if (createdUser.hasOwnProperty(\"id\")) {\n                                localStorage.setItem(\"popinabox_user\", createdUser.id)\n                                history.push(\"/\")\n                            }\n                        })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n        \n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for POP In A Box</h1>\n                <fieldset>\n                    <label htmlFor=\"firstName\"> First Name </label>\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"lastName\"> Last Name </label>\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"inputEmail\"> Email address </label>\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                </fieldset>\n                <fieldset>\n                    <button type=\"submit\"> Sign in </button>\n                </fieldset>\n            </form>\n        </main>\n    )\n}\n\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":51,"column":10,"nodeType":"90","endLine":51,"endColumn":12,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"92","line":1,"column":40,"nodeType":"86","messageId":"87","endLine":1,"endColumn":48},{"ruleId":"84","severity":1,"message":"93","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":24},{"ruleId":"84","severity":1,"message":"94","line":10,"column":40,"nodeType":"86","messageId":"87","endLine":10,"endColumn":51},{"ruleId":"88","severity":1,"message":"95","line":16,"column":5,"nodeType":"90","endLine":16,"endColumn":7,"suggestions":"96"},{"ruleId":"88","severity":1,"message":"97","line":27,"column":8,"nodeType":"90","endLine":27,"endColumn":10,"suggestions":"98"},{"ruleId":"84","severity":1,"message":"99","line":9,"column":11,"nodeType":"86","messageId":"87","endLine":9,"endColumn":19},{"ruleId":"84","severity":1,"message":"100","line":9,"column":11,"nodeType":"86","messageId":"87","endLine":9,"endColumn":25},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'collectionId', 'getCollectionById', and 'getCollections'. Either include them or remove the dependency array.","ArrayExpression",["103"],"'useState' is defined but never used.","'CollectionForm' is defined but never used.","'searchTerms' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCollections'. Either include it or remove the dependency array.",["104"],"React Hook useEffect has missing dependencies: 'collectionId' and 'getCollectionById'. Either include them or remove the dependency array.",["105"],"'password' is assigned a value but never used.","'verifyPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [collectionId, getCollectionById, getCollections]",{"range":"112","text":"113"},"Update the dependencies array to be: [getCollections]",{"range":"114","text":"115"},"Update the dependencies array to be: [collectionId, getCollectionById]",{"range":"116","text":"117"},[1588,1590],"[collectionId, getCollectionById, getCollections]",[506,508],"[getCollections]",[786,788],"[collectionId, getCollectionById]"]